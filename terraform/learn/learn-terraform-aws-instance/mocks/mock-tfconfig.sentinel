import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"modules": {
			"s3-webapp": {
				"config": {},
				"references": {
					"name": [
						"var.name",
					],
					"prefix": [
						"var.prefix",
					],
					"region": [
						"var.region",
					],
				},
				"source":  "app.terraform.io/abc-hashi-training/s3-webapp/aws",
				"version": "1.0.0",
			},
		},
		"outputs": {
			"ip": {
				"depends_on":  [],
				"description": "",
				"references": [
					"aws_eip.ip",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"website_endpoint": {
				"depends_on":  [],
				"description": "",
				"references": [
					"module.s3-webapp.endpoint",
				],
				"sensitive": false,
				"value":     undefined,
			},
		},
		"providers": {
			"aws": {
				"alias": {
					"": {
						"config": {},
						"references": {
							"region": [
								"var.region",
							],
						},
						"version": "~> 2.60",
					},
				},
				"config": {},
				"references": {
					"region": [
						"var.region",
					],
				},
				"version": "~> 2.60",
			},
		},
		"resources": {
			"aws_eip": {
				"ip": {
					"config": {
						"vpc": true,
					},
					"provisioners": null,
					"references": {
						"instance": [
							"aws_instance.example",
						],
						"vpc": [],
					},
				},
			},
			"aws_instance": {
				"example": {
					"config": {
						"instance_type": "t2.micro",
					},
					"provisioners": [
						{
							"config": {},
							"references": {
								"command": [
									"self",
								],
							},
							"type": "local-exec",
						},
						{
							"config": {
								"command": "echo 'Destroy-time provisioner'",
							},
							"references": {
								"command": [],
							},
							"type": "local-exec",
						},
					],
					"references": {
						"ami": [
							"var.amis",
							"var.region",
						],
						"instance_type": [],
						"tags": [
							"var.name",
						],
					},
				},
			},
		},
		"variables": {
			"amis": {
				"default": {
					"us-east-1": "ami-b374d5a5",
					"us-west-2": "ami-4b32be2b",
				},
				"description": "",
			},
			"name": {
				"default":     null,
				"description": "Your name to attach to the webapp address",
			},
			"prefix": {
				"default":     "learn",
				"description": "This is the environment your webapp will be prefixed with. dev, qa, or prod",
			},
			"region": {
				"default":     "us-east-1",
				"description": "This is the cloud hosting region where your webapp will be deployed.",
			},
		},
	},

	"module.s3-webapp": {
		"data":    {},
		"modules": {},
		"outputs": {
			"endpoint": {
				"depends_on":  [],
				"description": "",
				"references": [
					"aws_s3_bucket.bucket",
				],
				"sensitive": false,
				"value":     undefined,
			},
		},
		"providers": {
			"aws": {
				"alias": {
					"": {
						"config": {},
						"references": {
							"region": [
								"var.region",
							],
						},
						"version": "",
					},
				},
				"config": {},
				"references": {
					"region": [
						"var.region",
					],
				},
				"version": "",
			},
		},
		"resources": {
			"aws_s3_bucket": {
				"bucket": {
					"config": {
						"acl":           "public-read",
						"force_destroy": true,
						"website": [
							{
								"error_document": "error.html",
								"index_document": "index.html",
							},
						],
					},
					"provisioners": null,
					"references": {
						"acl": [],
						"bucket": [
							"var.prefix",
							"var.name",
						],
						"force_destroy": [],
						"policy": [
							"var.prefix",
							"var.name",
						],
						"website": [
							{
								"error_document": [],
								"index_document": [],
							},
						],
					},
				},
			},
			"aws_s3_bucket_object": {
				"webapp": {
					"config": {
						"acl":          "public-read",
						"content_type": "text/html",
						"key":          "index.html",
					},
					"provisioners": null,
					"references": {
						"acl": [],
						"bucket": [
							"aws_s3_bucket.bucket",
						],
						"content": [
							"path.module",
						],
						"content_type": [],
						"key":          [],
					},
				},
			},
		},
		"variables": {
			"name": {
				"default":     null,
				"description": "",
			},
			"prefix": {
				"default":     null,
				"description": "",
			},
			"region": {
				"default":     null,
				"description": "",
			},
		},
	},
}

module_paths = [
	[],
	[
		"s3-webapp",
	],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
