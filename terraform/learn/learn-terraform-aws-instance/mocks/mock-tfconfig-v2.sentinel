import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"references": [
					"var.region",
				],
			},
		},
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "~> 2.60",
	},
	"module.s3-webapp:aws": {
		"alias": "",
		"config": {
			"region": {
				"references": [
					"var.region",
				],
			},
		},
		"module_address":      "module.s3-webapp",
		"name":                "aws",
		"provider_config_key": "module.s3-webapp:aws",
		"version_constraint":  "",
	},
}

resources = {
	"aws_eip.ip": {
		"address": "aws_eip.ip",
		"config": {
			"instance": {
				"references": [
					"aws_instance.example",
				],
			},
			"vpc": {
				"constant_value": true,
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "ip",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_eip",
	},
	"aws_instance.example": {
		"address": "aws_instance.example",
		"config": {
			"ami": {
				"references": [
					"var.amis",
					"var.region",
				],
			},
			"instance_type": {
				"constant_value": "t2.micro",
			},
			"tags": {
				"references": [
					"var.name",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "aws",
		"provisioners": [
			{
				"config": {
					"command": {
						"references": [
							"self",
						],
					},
				},
				"index":            0,
				"resource_address": "aws_instance.example",
				"type":             "local-exec",
			},
			{
				"config": {
					"command": {
						"constant_value": "echo 'Destroy-time provisioner'",
					},
				},
				"index":            1,
				"resource_address": "aws_instance.example",
				"type":             "local-exec",
			},
		],
		"type": "aws_instance",
	},
	"module.s3-webapp.aws_s3_bucket.bucket": {
		"address": "module.s3-webapp.aws_s3_bucket.bucket",
		"config": {
			"acl": {
				"constant_value": "public-read",
			},
			"bucket": {
				"references": [
					"var.prefix",
					"var.name",
				],
			},
			"force_destroy": {
				"constant_value": true,
			},
			"policy": {
				"references": [
					"var.prefix",
					"var.name",
				],
			},
			"website": [
				{
					"error_document": {
						"constant_value": "error.html",
					},
					"index_document": {
						"constant_value": "index.html",
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.s3-webapp",
		"name":                "bucket",
		"provider_config_key": "module.s3-webapp:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket",
	},
	"module.s3-webapp.aws_s3_bucket_object.webapp": {
		"address": "module.s3-webapp.aws_s3_bucket_object.webapp",
		"config": {
			"acl": {
				"constant_value": "public-read",
			},
			"bucket": {
				"references": [
					"aws_s3_bucket.bucket",
				],
			},
			"content": {
				"references": [
					"path.module",
				],
			},
			"content_type": {
				"constant_value": "text/html",
			},
			"key": {
				"constant_value": "index.html",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.s3-webapp",
		"name":                "webapp",
		"provider_config_key": "module.s3-webapp:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket_object",
	},
}

provisioners = {
	"aws_instance.example:0": {
		"config": {
			"command": {
				"references": [
					"self",
				],
			},
		},
		"index":            0,
		"resource_address": "aws_instance.example",
		"type":             "local-exec",
	},
	"aws_instance.example:1": {
		"config": {
			"command": {
				"constant_value": "echo 'Destroy-time provisioner'",
			},
		},
		"index":            1,
		"resource_address": "aws_instance.example",
		"type":             "local-exec",
	},
}

variables = {
	"amis": {
		"default": {
			"us-east-1": "ami-b374d5a5",
			"us-west-2": "ami-4b32be2b",
		},
		"description":    "",
		"module_address": "",
		"name":           "amis",
	},
	"module.s3-webapp:name": {
		"default":        null,
		"description":    "",
		"module_address": "module.s3-webapp",
		"name":           "name",
	},
	"module.s3-webapp:prefix": {
		"default":        null,
		"description":    "",
		"module_address": "module.s3-webapp",
		"name":           "prefix",
	},
	"module.s3-webapp:region": {
		"default":        null,
		"description":    "",
		"module_address": "module.s3-webapp",
		"name":           "region",
	},
	"name": {
		"default":        null,
		"description":    "Your name to attach to the webapp address",
		"module_address": "",
		"name":           "name",
	},
	"prefix": {
		"default":        "learn",
		"description":    "This is the environment your webapp will be prefixed with. dev, qa, or prod",
		"module_address": "",
		"name":           "prefix",
	},
	"region": {
		"default":        "us-east-1",
		"description":    "This is the cloud hosting region where your webapp will be deployed.",
		"module_address": "",
		"name":           "region",
	},
}

outputs = {
	"ip": {
		"depends_on":     [],
		"description":    "",
		"module_address": "",
		"name":           "ip",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_eip.ip",
			],
		},
	},
	"module.s3-webapp:endpoint": {
		"depends_on":     [],
		"description":    "",
		"module_address": "module.s3-webapp",
		"name":           "endpoint",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_s3_bucket.bucket",
			],
		},
	},
	"website_endpoint": {
		"depends_on":     [],
		"description":    "",
		"module_address": "",
		"name":           "website_endpoint",
		"sensitive":      false,
		"value": {
			"references": [
				"module.s3-webapp.endpoint",
			],
		},
	},
}

module_calls = {
	"s3-webapp": {
		"config": {
			"name": {
				"references": [
					"var.name",
				],
			},
			"prefix": {
				"references": [
					"var.prefix",
				],
			},
			"region": {
				"references": [
					"var.region",
				],
			},
		},
		"count":              {},
		"for_each":           {},
		"module_address":     "",
		"name":               "s3-webapp",
		"source":             "app.terraform.io/abc-hashi-training/s3-webapp/aws",
		"version_constraint": "1.0.0",
	},
}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
